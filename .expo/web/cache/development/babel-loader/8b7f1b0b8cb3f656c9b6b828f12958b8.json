{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\MERTCAN\\\\Desktop\\\\receipes-app\\\\recipes-app-react-native-master\\\\src\\\\screens\\\\EventAdd\\\\EventAdd.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Firebase from \"../../../firebaseConfig\";\nimport * as ImagePicker from 'expo-image-picker';\nimport styles from \"./styles\";\nimport AppButton from \"../../components/AppButton/AppButton\";\nexport default function Login() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasGalleryPermission = _useState2[0],\n      setHasGalleryPermission = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      image = _useState4[0],\n      setImage = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      description = _useState8[0],\n      setDescription = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      location = _useState10[0],\n      setLocation = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      imageURL = _useState12[0],\n      setImageURL = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      category = _useState14[0],\n      setCategory = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      isPrivate = _useState16[0],\n      setIsPrivate = _useState16[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    return setIsPrivate(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n              console.log(status);\n              setHasGalleryPermission(status === 'granted');\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [1, 1],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var saveTodo = function saveTodo(imageURL) {\n    Firebase.firestore().collection('events').doc(Firebase.auth().currentUser.uid).collection('userEvents').add({\n      name: name,\n      description: description,\n      location: location,\n      imageURL: imageURL\n    }).then(function () {\n      console.log(\"success\");\n    });\n  };\n\n  var crateToDo = function crateToDo() {\n    var childPath, response, blob, task, taskProgress, taskCompleted, taskError;\n    return _regeneratorRuntime.async(function crateToDo$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!image) {\n              _context3.next = 15;\n              break;\n            }\n\n            childPath = \"events/\" + Firebase.auth().currentUser.uid + \"/\" + Math.random().toString(36);\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(fetch(image));\n\n          case 4:\n            response = _context3.sent;\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 7:\n            blob = _context3.sent;\n            task = Firebase.storage().ref().child(childPath).put(blob);\n\n            taskProgress = function taskProgress(snapshot) {\n              console.log(\"transferred: \" + snapshot.bytesTransferred);\n            };\n\n            taskCompleted = function taskCompleted() {\n              task.snapshot.ref.getDownloadURL().then(function (snapshot) {\n                saveTodo(snapshot);\n                console.log(snapshot);\n              });\n            };\n\n            taskError = function taskError(snapshot) {\n              console.log(snapshot);\n            };\n\n            task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n            _context3.next = 16;\n            break;\n\n          case 15:\n            saveTodo(\"https://firebasestorage.googleapis.com/v0/b/mobil-programlama-b7483.appspot.com/o/events%2FmBa4IuAMM7cjCib4bQRfrtOGuHA2%2Ffunction%20random()%20%7B%20%5Bnative%20code%5D%20%7D?alt=media&token=1954d5e9-e15b-4d9c-af73-89e38f5fcbea\");\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (hasGalleryPermission === false) {\n    return React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 12\n      }\n    }, \"No access to galery\");\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    contentContainerStyle: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.formBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, React.createElement(AppButton, {\n    title: \"Pick Image From Gallery\",\n    style: styles.button,\n    onPress: function onPress() {\n      return pickImage();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      minHeight: 150,\n      borderRadius: 8,\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.formItems,\n    placeholder: \"name\",\n    onChangeText: function onChangeText(name) {\n      return setName(name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.formItems,\n    placeholder: \"description\",\n    onChangeText: function onChangeText(description) {\n      return setDescription(description);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.formItems,\n    placeholder: \"location\",\n    onChangeText: function onChangeText(location) {\n      return setLocation(location);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.formItems,\n    placeholder: \"imageURL\",\n    onChangeText: function onChangeText(imageURL) {\n      return setImageURL(imageURL);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.formItems,\n    placeholder: \"category\",\n    onChangeText: function onChangeText(category) {\n      return setImageURL(category);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      marginBottom: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      flex: 0,\n      marginTop: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, isPrivate ? \"Private\" : \"Public\"), React.createElement(Switch, {\n    style: {\n      flex: 0\n    },\n    trackColor: {\n      false: '#767577',\n      true: '#81b0ff'\n    },\n    thumbColor: isPrivate ? '#f5dd4b' : '#f4f3f4',\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: toggleSwitch,\n    value: isPrivate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  })), React.createElement(AppButton, {\n    style: styles.button,\n    onPress: function onPress() {\n      return crateToDo();\n    },\n    title: \"Sign Up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/MERTCAN/Desktop/receipes-app/recipes-app-react-native-master/src/screens/EventAdd/EventAdd.js"],"names":["React","useState","useEffect","Firebase","ImagePicker","styles","AppButton","Login","hasGalleryPermission","setHasGalleryPermission","image","setImage","name","setName","description","setDescription","location","setLocation","imageURL","setImageURL","category","setCategory","isPrivate","setIsPrivate","toggleSwitch","previousState","Platform","OS","requestMediaLibraryPermissionsAsync","status","console","log","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","result","cancelled","uri","saveTodo","firestore","collection","doc","auth","currentUser","uid","add","then","crateToDo","childPath","Math","random","toString","fetch","response","blob","task","storage","ref","child","put","taskProgress","snapshot","bytesTransferred","taskCompleted","getDownloadURL","taskError","on","container","flex","formBox","button","minHeight","borderRadius","marginTop","formItems","flexDirection","marginBottom","false","true"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { View, Button, TextInput, Text, Image, Switch, KeyboardAvoidingView, ScrollView, TouchableOpacity } from 'react-native'\r\nimport Firebase from '../../../firebaseConfig';\r\nimport * as ImagePicker from 'expo-image-picker'\r\nimport styles from \"./styles\";\r\nimport AppButton from '../../components/AppButton/AppButton';\r\n\r\n\r\nexport default function Login() {\r\n\r\n  const [hasGalleryPermission, setHasGalleryPermission] = useState(null);\r\n  const [image, setImage] = useState(null);\r\n\r\n  const [name, setName] = useState(\"\")\r\n  const [description, setDescription] = useState(\"\")\r\n  const [location, setLocation] = useState(\"\")\r\n  const [imageURL, setImageURL] = useState(\"\")\r\n  const [category, setCategory] = useState(\"\")\r\n\r\n  const [isPrivate, setIsPrivate] = useState(false);\r\n  const toggleSwitch = () => setIsPrivate(previousState => !previousState);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (Platform.OS !== 'web') {\r\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n        console.log(status)\r\n        setHasGalleryPermission(status === 'granted')\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      aspect: [1, 1],\r\n      quality: 1,\r\n    });\r\n\r\n    console.log(result);\r\n\r\n    if (!result.cancelled) {\r\n      setImage(result.uri);\r\n    }\r\n  };\r\n\r\n\r\n  const saveTodo = (imageURL) => {\r\n    Firebase.firestore()\r\n      .collection('events')\r\n      .doc(Firebase.auth().currentUser.uid)\r\n      .collection('userEvents')\r\n      .add({\r\n        name,\r\n        description,\r\n        location,\r\n        imageURL,\r\n      }).then((function () {\r\n        console.log(\"success\")\r\n      }))\r\n  }\r\n  const crateToDo = async () => {\r\n    if (image) {\r\n      const childPath = `events/${Firebase.auth().currentUser.uid}/${Math.random().toString(36)}`\r\n\r\n      const response = await fetch(image)\r\n      const blob = await response.blob();\r\n\r\n      const task = Firebase\r\n        .storage()\r\n        .ref()\r\n        .child(childPath)\r\n        .put(blob)\r\n\r\n      const taskProgress = snapshot => {\r\n        console.log(`transferred: ${snapshot.bytesTransferred}`)\r\n      }\r\n\r\n      const taskCompleted = () => {\r\n        task.snapshot.ref.getDownloadURL().then((snapshot) => {\r\n          saveTodo(snapshot)\r\n          console.log(snapshot)\r\n        })\r\n      }\r\n\r\n      const taskError = snapshot => {\r\n        console.log(snapshot)\r\n      }\r\n\r\n      task.on(\"state_changed\", taskProgress, taskError, taskCompleted)\r\n    } else {\r\n      saveTodo(\"https://firebasestorage.googleapis.com/v0/b/mobil-programlama-b7483.appspot.com/o/events%2FmBa4IuAMM7cjCib4bQRfrtOGuHA2%2Ffunction%20random()%20%7B%20%5Bnative%20code%5D%20%7D?alt=media&token=1954d5e9-e15b-4d9c-af73-89e38f5fcbea\")\r\n    }\r\n\r\n\r\n  }\r\n\r\n  if (hasGalleryPermission === false) {\r\n    return <Text>No access to galery</Text>\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <View style={styles.container}>\r\n      <KeyboardAvoidingView\r\n        behavior='padding'\r\n        contentContainerStyle={{ flex: 1 }}>\r\n        <ScrollView\r\n          contentContainerStyle={{ flex: 1, }}>\r\n          <View style={styles.formBox}>\r\n\r\n            <AppButton title=\"Pick Image From Gallery\" style={styles.button} onPress={() => pickImage()} ></AppButton>\r\n            <Image source={{ uri: image }} style={{ minHeight: 150, borderRadius: 8, marginTop: 8 }} />\r\n            <TextInput\r\n              style={styles.formItems}\r\n              placeholder=\"name\"\r\n              onChangeText={name => setName(name)}\r\n            />\r\n            <TextInput\r\n              style={styles.formItems}\r\n              placeholder=\"description\"\r\n              onChangeText={description => setDescription(description)}\r\n            />\r\n            <TextInput\r\n              style={styles.formItems}\r\n              placeholder=\"location\"\r\n              onChangeText={location => setLocation(location)}\r\n            />\r\n            <TextInput\r\n              style={styles.formItems}\r\n              placeholder=\"imageURL\"\r\n              onChangeText={imageURL => setImageURL(imageURL)}\r\n            />\r\n            <TextInput\r\n              style={styles.formItems}\r\n              placeholder=\"category\"\r\n              onChangeText={category => setImageURL(category)}\r\n            />\r\n            <View style={{ flexDirection: \"row\", marginBottom: 24 }}>\r\n              <Text style={{ flex: 0, marginTop: 12 }}>\r\n                {isPrivate ? \"Private\" : \"Public\"}\r\n              </Text>\r\n              <Switch\r\n                style={{ flex: 0 }}\r\n                trackColor={{ false: '#767577', true: '#81b0ff' }}\r\n                thumbColor={isPrivate ? '#f5dd4b' : '#f4f3f4'}\r\n                ios_backgroundColor=\"#3e3e3e\"\r\n                onValueChange={toggleSwitch}\r\n                value={isPrivate}\r\n              />\r\n            </View>\r\n            <AppButton\r\n              style={styles.button}\r\n              onPress={() => crateToDo()}\r\n              title=\"Sign Up\" />\r\n\r\n          </View>\r\n        </ScrollView>\r\n      </KeyboardAvoidingView>\r\n    </View>\r\n\r\n  )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}