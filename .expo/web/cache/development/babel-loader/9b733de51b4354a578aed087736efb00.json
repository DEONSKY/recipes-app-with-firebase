{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { Component } from 'react';\nimport { recipes, categories, ingredients } from \"./dataArrays\";\nimport Firebase from \"../firebaseConfig\";\nexport function getCategoryById(categoryId) {\n  var category;\n  categories.map(function (data) {\n    if (data.id == categoryId) {\n      category = data;\n    }\n  });\n  return category;\n}\nexport function getIngredientName(ingredientID) {\n  var name;\n  ingredients.map(function (data) {\n    if (data.ingredientId == ingredientID) {\n      name = data.name;\n    }\n  });\n  return name;\n}\nexport function getIngredientUrl(ingredientID) {\n  var url;\n  ingredients.map(function (data) {\n    if (data.ingredientId == ingredientID) {\n      url = data.photo_url;\n    }\n  });\n  return url;\n}\nexport function getCategoryName(categoryId) {\n  var name;\n  categories.map(function (data) {\n    if (data.id == categoryId) {\n      name = data.name;\n    }\n  });\n  return name;\n}\nexport function getRecipes(categoryId) {\n  var recipesArray = [];\n  Firebase.firestore().collection(\"recipes\").onSnapShot(function (snapshot) {\n    return recipesArray = (_readOnlyError(\"recipesArray\"), snapshot.docs.map(function (doc) {\n      var data = doc.data();\n\n      if (data.categoryId == categoryId) {\n        return data;\n      }\n    }));\n  });\n}\nexport function addRecipe(recipe) {\n  Firebase.firestore().collection(\"recipes\").add({\n    recipeId: recipe.recipeId,\n    categoryId: recipe.categoryId,\n    title: recipe.title,\n    photo_url: receipe.photo_url,\n    photosArray: recipe.photosArray,\n    time: recipe.time,\n    ingredients: recipe.ingredients,\n    description: recipe.description\n  });\n}\nexport function addAllRecipes(recipes) {\n  recipes.map(function (recipe) {\n    addRecipe(recipe);\n  });\n}\nexport function getRecipesByIngredient(ingredientId) {\n  var recipesArray = [];\n  recipes.map(function (data) {\n    data.ingredients.map(function (index) {\n      if (index[0] == ingredientId) {\n        recipesArray.push(data);\n      }\n    });\n  });\n  return recipesArray;\n}\nexport function getNumberOfRecipes(categoryId) {\n  var count = 0;\n  recipes.map(function (data) {\n    if (data.categoryId == categoryId) {\n      count++;\n    }\n  });\n  return count;\n}\nexport function getAllIngredients(idArray) {\n  var ingredientsArray = [];\n  idArray.map(function (index) {\n    ingredients.map(function (data) {\n      if (data.ingredientId == index[0]) {\n        ingredientsArray.push([data, index[1]]);\n      }\n    });\n  });\n  return ingredientsArray;\n}\nexport function getRecipesByIngredientName(ingredientName) {\n  var nameUpper = ingredientName.toUpperCase();\n  var recipesArray = [];\n  ingredients.map(function (data) {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      var _recipes = getRecipesByIngredient(data.ingredientId);\n\n      var unique = _toConsumableArray(new Set(_recipes));\n\n      unique.map(function (item) {\n        recipesArray.push(item);\n      });\n    }\n  });\n\n  var uniqueArray = _toConsumableArray(new Set(recipesArray));\n\n  return uniqueArray;\n}\nexport function getRecipesByCategoryName(categoryName) {\n  var nameUpper = categoryName.toUpperCase();\n  var recipesArray = [];\n  categories.map(function (data) {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      var _recipes2 = getRecipes(data.id);\n\n      _recipes2.map(function (item) {\n        recipesArray.push(item);\n      });\n    }\n  });\n  return recipesArray;\n}\nexport function getRecipesByRecipeName(recipeName) {\n  var nameUpper = recipeName.toUpperCase();\n  var recipesArray = [];\n  recipes.map(function (data) {\n    if (data.title.toUpperCase().includes(nameUpper)) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}","map":{"version":3,"sources":["C:/Users/MERTCAN/Desktop/receipes-app/recipes-app-react-native-master/src/data/MockDataAPI.js"],"names":["React","Component","recipes","categories","ingredients","Firebase","getCategoryById","categoryId","category","map","data","id","getIngredientName","ingredientID","name","ingredientId","getIngredientUrl","url","photo_url","getCategoryName","getRecipes","recipesArray","firestore","collection","onSnapShot","snapshot","docs","doc","addRecipe","recipe","add","recipeId","title","receipe","photosArray","time","description","addAllRecipes","getRecipesByIngredient","index","push","getNumberOfRecipes","count","getAllIngredients","idArray","ingredientsArray","getRecipesByIngredientName","ingredientName","nameUpper","toUpperCase","includes","unique","Set","item","uniqueArray","getRecipesByCategoryName","categoryName","getRecipesByRecipeName","recipeName"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,WAA9B;AACA,OAAOC,QAAP;AAEA,OAAO,SAASC,eAAT,CAAyBC,UAAzB,EAAqC;AAC1C,MAAIC,QAAJ;AACAL,EAAAA,UAAU,CAACM,GAAX,CAAe,UAAAC,IAAI,EAAI;AACrB,QAAIA,IAAI,CAACC,EAAL,IAAWJ,UAAf,EAA2B;AACzBC,MAAAA,QAAQ,GAAGE,IAAX;AACD;AACF,GAJD;AAKA,SAAOF,QAAP;AACD;AAED,OAAO,SAASI,iBAAT,CAA2BC,YAA3B,EAAyC;AAC9C,MAAIC,IAAJ;AACAV,EAAAA,WAAW,CAACK,GAAZ,CAAgB,UAAAC,IAAI,EAAI;AACtB,QAAIA,IAAI,CAACK,YAAL,IAAqBF,YAAzB,EAAuC;AACrCC,MAAAA,IAAI,GAAGJ,IAAI,CAACI,IAAZ;AACD;AACF,GAJD;AAKA,SAAOA,IAAP;AACD;AAED,OAAO,SAASE,gBAAT,CAA0BH,YAA1B,EAAwC;AAC7C,MAAII,GAAJ;AACAb,EAAAA,WAAW,CAACK,GAAZ,CAAgB,UAAAC,IAAI,EAAI;AACtB,QAAIA,IAAI,CAACK,YAAL,IAAqBF,YAAzB,EAAuC;AACrCI,MAAAA,GAAG,GAAGP,IAAI,CAACQ,SAAX;AACD;AACF,GAJD;AAKA,SAAOD,GAAP;AACD;AAED,OAAO,SAASE,eAAT,CAAyBZ,UAAzB,EAAqC;AAC1C,MAAIO,IAAJ;AACAX,EAAAA,UAAU,CAACM,GAAX,CAAe,UAAAC,IAAI,EAAI;AACrB,QAAIA,IAAI,CAACC,EAAL,IAAWJ,UAAf,EAA2B;AACzBO,MAAAA,IAAI,GAAGJ,IAAI,CAACI,IAAZ;AACD;AACF,GAJD;AAKA,SAAOA,IAAP;AACD;AAED,OAAO,SAASM,UAAT,CAAoBb,UAApB,EAAgC;AACrC,MAAMc,YAAY,GAAG,EAArB;AACAhB,EAAAA,QAAQ,CAACiB,SAAT,GACGC,UADH,CACc,SADd,EAEGC,UAFH,CAEc,UAACC,QAAD,EAAc;AACxB,WAAOJ,YAAY,oCAAGI,QAAQ,CAACC,IAAT,CAAcjB,GAAd,CAAkB,UAAAkB,GAAG,EAAI;AAC7C,UAAMjB,IAAI,GAAGiB,GAAG,CAACjB,IAAJ,EAAb;;AACA,UAAIA,IAAI,CAACH,UAAL,IAAmBA,UAAvB,EAAmC;AACnC,eAAOG,IAAP;AACC;AACF,KALqB,CAAH,CAAnB;AAKG,GARP;AAkBD;AAED,OAAO,SAASkB,SAAT,CAAmBC,MAAnB,EAA0B;AAC/BxB,EAAAA,QAAQ,CAACiB,SAAT,GACCC,UADD,CACY,SADZ,EACuBO,GADvB,CAC2B;AACzBC,IAAAA,QAAQ,EAACF,MAAM,CAACE,QADS;AAEzBxB,IAAAA,UAAU,EAAEsB,MAAM,CAACtB,UAFM;AAGzByB,IAAAA,KAAK,EAAEH,MAAM,CAACG,KAHW;AAIzBd,IAAAA,SAAS,EAAEe,OAAO,CAACf,SAJM;AAKzBgB,IAAAA,WAAW,EAAEL,MAAM,CAACK,WALK;AAMzBC,IAAAA,IAAI,EAAEN,MAAM,CAACM,IANY;AAOzB/B,IAAAA,WAAW,EAAEyB,MAAM,CAACzB,WAPK;AAQzBgC,IAAAA,WAAW,EAAEP,MAAM,CAACO;AARK,GAD3B;AAWD;AAED,OAAO,SAASC,aAAT,CAAuBnC,OAAvB,EAA+B;AACpCA,EAAAA,OAAO,CAACO,GAAR,CAAY,UAAAoB,MAAM,EAAE;AAClBD,IAAAA,SAAS,CAACC,MAAD,CAAT;AACD,GAFD;AAGD;AAID,OAAO,SAASS,sBAAT,CAAgCvB,YAAhC,EAA8C;AACnD,MAAMM,YAAY,GAAG,EAArB;AACAnB,EAAAA,OAAO,CAACO,GAAR,CAAY,UAAAC,IAAI,EAAI;AAClBA,IAAAA,IAAI,CAACN,WAAL,CAAiBK,GAAjB,CAAqB,UAAA8B,KAAK,EAAI;AAC5B,UAAIA,KAAK,CAAC,CAAD,CAAL,IAAYxB,YAAhB,EAA8B;AAC5BM,QAAAA,YAAY,CAACmB,IAAb,CAAkB9B,IAAlB;AACD;AACF,KAJD;AAKD,GAND;AAOA,SAAOW,YAAP;AACD;AAED,OAAO,SAASoB,kBAAT,CAA4BlC,UAA5B,EAAwC;AAC7C,MAAImC,KAAK,GAAG,CAAZ;AACAxC,EAAAA,OAAO,CAACO,GAAR,CAAY,UAAAC,IAAI,EAAI;AAClB,QAAIA,IAAI,CAACH,UAAL,IAAmBA,UAAvB,EAAmC;AACjCmC,MAAAA,KAAK;AACN;AACF,GAJD;AAKA,SAAOA,KAAP;AACD;AAED,OAAO,SAASC,iBAAT,CAA2BC,OAA3B,EAAoC;AACzC,MAAMC,gBAAgB,GAAG,EAAzB;AACAD,EAAAA,OAAO,CAACnC,GAAR,CAAY,UAAA8B,KAAK,EAAI;AACnBnC,IAAAA,WAAW,CAACK,GAAZ,CAAgB,UAAAC,IAAI,EAAI;AACtB,UAAIA,IAAI,CAACK,YAAL,IAAqBwB,KAAK,CAAC,CAAD,CAA9B,EAAmC;AACjCM,QAAAA,gBAAgB,CAACL,IAAjB,CAAsB,CAAC9B,IAAD,EAAO6B,KAAK,CAAC,CAAD,CAAZ,CAAtB;AACD;AACF,KAJD;AAKD,GAND;AAOA,SAAOM,gBAAP;AACD;AAGD,OAAO,SAASC,0BAAT,CAAoCC,cAApC,EAAoD;AACzD,MAAMC,SAAS,GAAGD,cAAc,CAACE,WAAf,EAAlB;AACA,MAAM5B,YAAY,GAAG,EAArB;AACAjB,EAAAA,WAAW,CAACK,GAAZ,CAAgB,UAAAC,IAAI,EAAI;AACtB,QAAIA,IAAI,CAACI,IAAL,CAAUmC,WAAV,GAAwBC,QAAxB,CAAiCF,SAAjC,CAAJ,EAAiD;AAE/C,UAAM9C,QAAO,GAAGoC,sBAAsB,CAAC5B,IAAI,CAACK,YAAN,CAAtC;;AACA,UAAMoC,MAAM,sBAAO,IAAIC,GAAJ,CAAQlD,QAAR,CAAP,CAAZ;;AACAiD,MAAAA,MAAM,CAAC1C,GAAP,CAAW,UAAA4C,IAAI,EAAI;AACjBhC,QAAAA,YAAY,CAACmB,IAAb,CAAkBa,IAAlB;AACD,OAFD;AAGD;AACF,GATD;;AAUA,MAAMC,WAAW,sBAAO,IAAIF,GAAJ,CAAQ/B,YAAR,CAAP,CAAjB;;AACA,SAAOiC,WAAP;AACD;AAED,OAAO,SAASC,wBAAT,CAAkCC,YAAlC,EAAgD;AACrD,MAAMR,SAAS,GAAGQ,YAAY,CAACP,WAAb,EAAlB;AACA,MAAM5B,YAAY,GAAG,EAArB;AACAlB,EAAAA,UAAU,CAACM,GAAX,CAAe,UAAAC,IAAI,EAAI;AACrB,QAAIA,IAAI,CAACI,IAAL,CAAUmC,WAAV,GAAwBC,QAAxB,CAAiCF,SAAjC,CAAJ,EAAiD;AAC/C,UAAM9C,SAAO,GAAGkB,UAAU,CAACV,IAAI,CAACC,EAAN,CAA1B;;AACAT,MAAAA,SAAO,CAACO,GAAR,CAAY,UAAA4C,IAAI,EAAI;AAClBhC,QAAAA,YAAY,CAACmB,IAAb,CAAkBa,IAAlB;AACD,OAFD;AAGD;AACF,GAPD;AAQA,SAAOhC,YAAP;AACD;AAED,OAAO,SAASoC,sBAAT,CAAgCC,UAAhC,EAA4C;AACjD,MAAMV,SAAS,GAAGU,UAAU,CAACT,WAAX,EAAlB;AACA,MAAM5B,YAAY,GAAG,EAArB;AACAnB,EAAAA,OAAO,CAACO,GAAR,CAAY,UAAAC,IAAI,EAAI;AAClB,QAAIA,IAAI,CAACsB,KAAL,CAAWiB,WAAX,GAAyBC,QAAzB,CAAkCF,SAAlC,CAAJ,EAAkD;AAChD3B,MAAAA,YAAY,CAACmB,IAAb,CAAkB9B,IAAlB;AACD;AACF,GAJD;AAKA,SAAOW,YAAP;AACD","sourcesContent":["import { Text } from 'react-native';\nimport React, { Component } from 'react';\nimport { recipes, categories, ingredients } from './dataArrays';\nimport Firebase from '../firebaseConfig'\n\nexport function getCategoryById(categoryId) {\n  let category;\n  categories.map(data => {\n    if (data.id == categoryId) {\n      category = data;\n    }\n  });\n  return category;\n}\n\nexport function getIngredientName(ingredientID) {\n  let name;\n  ingredients.map(data => {\n    if (data.ingredientId == ingredientID) {\n      name = data.name;\n    }\n  });\n  return name;\n}\n\nexport function getIngredientUrl(ingredientID) {\n  let url;\n  ingredients.map(data => {\n    if (data.ingredientId == ingredientID) {\n      url = data.photo_url;\n    }\n  });\n  return url;\n}\n\nexport function getCategoryName(categoryId) {\n  let name;\n  categories.map(data => {\n    if (data.id == categoryId) {\n      name = data.name;\n    }\n  });\n  return name;\n}\n\nexport function getRecipes(categoryId) {\n  const recipesArray = [];\n  Firebase.firestore()\n    .collection(\"recipes\")\n    .onSnapShot((snapshot) => {\n      return recipesArray = snapshot.docs.map(doc => {\n        const data = doc.data();\n        if (data.categoryId == categoryId) {\n        return data\n        }\n      })})\n      /*\n  const recipesArray = [];\n  recipes.map(data => {\n    if (data.categoryId == categoryId) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n  */\n}\n\nexport function addRecipe(recipe){\n  Firebase.firestore()\n  .collection(\"recipes\").add({\n    recipeId:recipe.recipeId,\n    categoryId: recipe.categoryId,\n    title: recipe.title,\n    photo_url: receipe.photo_url,\n    photosArray: recipe.photosArray,\n    time: recipe.time,\n    ingredients: recipe.ingredients,\n    description: recipe.description\n  })\n}\n\nexport function addAllRecipes(recipes){\n  recipes.map(recipe=>{\n    addRecipe(recipe)\n  })\n}\n\n\n// modifica\nexport function getRecipesByIngredient(ingredientId) {\n  const recipesArray = [];\n  recipes.map(data => {\n    data.ingredients.map(index => {\n      if (index[0] == ingredientId) {\n        recipesArray.push(data);\n      }\n    });\n  });\n  return recipesArray;\n}\n\nexport function getNumberOfRecipes(categoryId) {\n  let count = 0;\n  recipes.map(data => {\n    if (data.categoryId == categoryId) {\n      count++;\n    }\n  });\n  return count;\n}\n\nexport function getAllIngredients(idArray) {\n  const ingredientsArray = [];\n  idArray.map(index => {\n    ingredients.map(data => {\n      if (data.ingredientId == index[0]) {\n        ingredientsArray.push([data, index[1]]);\n      }\n    });\n  });\n  return ingredientsArray;\n}\n\n// functions for search\nexport function getRecipesByIngredientName(ingredientName) {\n  const nameUpper = ingredientName.toUpperCase();\n  const recipesArray = [];\n  ingredients.map(data => {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      // data.name.yoUpperCase() == nameUpper\n      const recipes = getRecipesByIngredient(data.ingredientId);\n      const unique = [...new Set(recipes)];\n      unique.map(item => {\n        recipesArray.push(item);\n      });\n    }\n  });\n  const uniqueArray = [...new Set(recipesArray)];\n  return uniqueArray;\n}\n\nexport function getRecipesByCategoryName(categoryName) {\n  const nameUpper = categoryName.toUpperCase();\n  const recipesArray = [];\n  categories.map(data => {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      const recipes = getRecipes(data.id); // return a vector of recipes\n      recipes.map(item => {\n        recipesArray.push(item);\n      });\n    }\n  });\n  return recipesArray;\n}\n\nexport function getRecipesByRecipeName(recipeName) {\n  const nameUpper = recipeName.toUpperCase();\n  const recipesArray = [];\n  recipes.map(data => {\n    if (data.title.toUpperCase().includes(nameUpper)) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}\n"]},"metadata":{},"sourceType":"module"}