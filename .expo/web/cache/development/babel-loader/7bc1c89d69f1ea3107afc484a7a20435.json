{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { Component } from 'react';\nimport { recipes, categories, ingredients } from \"./dataArrays\";\nimport Firebase from \"../../firebaseConfig\";\nexport function getCategoryById(categoryId) {\n  var category;\n  categories.map(function (data) {\n    if (data.id == categoryId) {\n      category = data;\n    }\n  });\n  return category;\n}\nexport function getIngredientName(ingredientID) {\n  var name;\n  ingredients.map(function (data) {\n    if (data.ingredientId == ingredientID) {\n      name = data.name;\n    }\n  });\n  return name;\n}\nexport function getIngredientUrl(ingredientID) {\n  var url;\n  ingredients.map(function (data) {\n    if (data.ingredientId == ingredientID) {\n      url = data.photo_url;\n    }\n  });\n  return url;\n}\nexport function getCategoryName(categoryId) {\n  var name;\n  categories.map(function (data) {\n    if (data.id == categoryId) {\n      name = data.name;\n    }\n  });\n  return name;\n}\nexport function getRecipes(categoryId) {\n  var recipesArray = [];\n  Firebase.firestore().collection(\"recipes\").onSnapShot(function (snapshot) {\n    return recipesArray = (_readOnlyError(\"recipesArray\"), snapshot.docs.map(function (doc) {\n      var data = doc.data();\n\n      if (data.categoryId == categoryId) {\n        return data;\n      }\n    }));\n  });\n}\nexport function getAllRecipes() {\n  var recipesArray = [];\n  Firebase.firestore().collection(\"recipes\").get().then(function (snapshot) {\n    recipesArray = snapshot.docs.map(function (doc) {\n      return doc.data();\n    });\n  });\n  console.log(recipesArray);\n  return recipesArray;\n}\nexport function addRecipe(recipe) {\n  Firebase.firestore().collection(\"recipes\").add({\n    recipeId: recipe.recipeId,\n    categoryId: recipe.categoryId,\n    title: recipe.title,\n    photo_url: recipe.photo_url,\n    photosArray: recipe.photosArray,\n    time: recipe.time,\n    ingredients: recipe.ingredients.map(function (ingredient) {\n      return {\n        id: ingredient[0],\n        amount: ingredient[1]\n      };\n    }),\n    description: recipe.description\n  });\n}\nexport function addAllRecipes(recipes) {\n  recipes.map(function (recipe) {\n    addRecipe(recipe);\n  });\n}\nexport function addCategory(category) {\n  Firebase.firestore().collection(\"categories\").add({\n    id: category.id,\n    name: category.name,\n    photo_url: category.photo_url\n  });\n}\nexport function addCategories(categories) {\n  categories.map(function (categories) {\n    addCategory(categories);\n  });\n}\nexport function addIngredient(ingredient) {\n  Firebase.firestore().collection(\"ingredients\").add({\n    ingredientId: ingredient.ingredientId,\n    name: ingredient.name,\n    photo_url: ingredient.photo_url\n  });\n}\nexport function addIngredients(ingredients) {\n  ingredients.map(function (ingredient) {\n    addIngredient(ingredient);\n  });\n}\nexport function getRecipesByIngredient(ingredientId) {\n  var recipesArray = [];\n  recipes.map(function (data) {\n    data.ingredients.map(function (index) {\n      if (index[0] == ingredientId) {\n        recipesArray.push(data);\n      }\n    });\n  });\n  return recipesArray;\n}\nexport function getNumberOfRecipes(categoryId) {\n  var count = 0;\n  recipes.map(function (data) {\n    if (data.categoryId == categoryId) {\n      count++;\n    }\n  });\n  return count;\n}\nexport function getAllIngredients(idArray) {\n  var ingredientsArray = [];\n  idArray.map(function (index) {\n    ingredients.map(function (data) {\n      if (data.ingredientId == index[0]) {\n        ingredientsArray.push([data, index[1]]);\n      }\n    });\n  });\n  return ingredientsArray;\n}\nexport function getRecipesByIngredientName(ingredientName) {\n  var nameUpper = ingredientName.toUpperCase();\n  var recipesArray = [];\n  ingredients.map(function (data) {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      var _recipes = getRecipesByIngredient(data.ingredientId);\n\n      var unique = _toConsumableArray(new Set(_recipes));\n\n      unique.map(function (item) {\n        recipesArray.push(item);\n      });\n    }\n  });\n\n  var uniqueArray = _toConsumableArray(new Set(recipesArray));\n\n  return uniqueArray;\n}\nexport function getRecipesByCategoryName(categoryName) {\n  var nameUpper = categoryName.toUpperCase();\n  var recipesArray = [];\n  categories.map(function (data) {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      var _recipes2 = getRecipes(data.id);\n\n      _recipes2.map(function (item) {\n        recipesArray.push(item);\n      });\n    }\n  });\n  return recipesArray;\n}\nexport function getRecipesByRecipeName(recipeName) {\n  var nameUpper = recipeName.toUpperCase();\n  var recipesArray = [];\n  recipes.map(function (data) {\n    if (data.title.toUpperCase().includes(nameUpper)) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}","map":{"version":3,"sources":["C:/Users/MERTCAN/Desktop/receipes-app/recipes-app-react-native-master/src/data/MockDataAPI.js"],"names":["React","Component","recipes","categories","ingredients","Firebase","getCategoryById","categoryId","category","map","data","id","getIngredientName","ingredientID","name","ingredientId","getIngredientUrl","url","photo_url","getCategoryName","getRecipes","recipesArray","firestore","collection","onSnapShot","snapshot","docs","doc","getAllRecipes","get","then","console","log","addRecipe","recipe","add","recipeId","title","photosArray","time","ingredient","amount","description","addAllRecipes","addCategory","addCategories","addIngredient","addIngredients","getRecipesByIngredient","index","push","getNumberOfRecipes","count","getAllIngredients","idArray","ingredientsArray","getRecipesByIngredientName","ingredientName","nameUpper","toUpperCase","includes","unique","Set","item","uniqueArray","getRecipesByCategoryName","categoryName","getRecipesByRecipeName","recipeName"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,WAA9B;AACA,OAAOC,QAAP;AAEA,OAAO,SAASC,eAAT,CAAyBC,UAAzB,EAAqC;AAC1C,MAAIC,QAAJ;AACAL,EAAAA,UAAU,CAACM,GAAX,CAAe,UAAAC,IAAI,EAAI;AACrB,QAAIA,IAAI,CAACC,EAAL,IAAWJ,UAAf,EAA2B;AACzBC,MAAAA,QAAQ,GAAGE,IAAX;AACD;AACF,GAJD;AAKA,SAAOF,QAAP;AACD;AAED,OAAO,SAASI,iBAAT,CAA2BC,YAA3B,EAAyC;AAC9C,MAAIC,IAAJ;AACAV,EAAAA,WAAW,CAACK,GAAZ,CAAgB,UAAAC,IAAI,EAAI;AACtB,QAAIA,IAAI,CAACK,YAAL,IAAqBF,YAAzB,EAAuC;AACrCC,MAAAA,IAAI,GAAGJ,IAAI,CAACI,IAAZ;AACD;AACF,GAJD;AAKA,SAAOA,IAAP;AACD;AAED,OAAO,SAASE,gBAAT,CAA0BH,YAA1B,EAAwC;AAC7C,MAAII,GAAJ;AACAb,EAAAA,WAAW,CAACK,GAAZ,CAAgB,UAAAC,IAAI,EAAI;AACtB,QAAIA,IAAI,CAACK,YAAL,IAAqBF,YAAzB,EAAuC;AACrCI,MAAAA,GAAG,GAAGP,IAAI,CAACQ,SAAX;AACD;AACF,GAJD;AAKA,SAAOD,GAAP;AACD;AAED,OAAO,SAASE,eAAT,CAAyBZ,UAAzB,EAAqC;AAC1C,MAAIO,IAAJ;AACAX,EAAAA,UAAU,CAACM,GAAX,CAAe,UAAAC,IAAI,EAAI;AACrB,QAAIA,IAAI,CAACC,EAAL,IAAWJ,UAAf,EAA2B;AACzBO,MAAAA,IAAI,GAAGJ,IAAI,CAACI,IAAZ;AACD;AACF,GAJD;AAKA,SAAOA,IAAP;AACD;AAED,OAAO,SAASM,UAAT,CAAoBb,UAApB,EAAgC;AACrC,MAAMc,YAAY,GAAG,EAArB;AACAhB,EAAAA,QAAQ,CAACiB,SAAT,GACGC,UADH,CACc,SADd,EAEGC,UAFH,CAEc,UAACC,QAAD,EAAc;AACxB,WAAOJ,YAAY,oCAAGI,QAAQ,CAACC,IAAT,CAAcjB,GAAd,CAAkB,UAAAkB,GAAG,EAAI;AAC7C,UAAMjB,IAAI,GAAGiB,GAAG,CAACjB,IAAJ,EAAb;;AACA,UAAIA,IAAI,CAACH,UAAL,IAAmBA,UAAvB,EAAmC;AACnC,eAAOG,IAAP;AACC;AACF,KALqB,CAAH,CAAnB;AAKG,GARP;AAkBD;AAED,OAAO,SAASkB,aAAT,GAAwB;AAC7B,MAAIP,YAAY,GAAG,EAAnB;AACAhB,EAAAA,QAAQ,CAACiB,SAAT,GACGC,UADH,CACc,SADd,EAEGM,GAFH,GAGGC,IAHH,CAGQ,UAACL,QAAD,EAAc;AACjBJ,IAAAA,YAAY,GAAGI,QAAQ,CAACC,IAAT,CAAcjB,GAAd,CAAkB,UAAAkB,GAAG,EAAI;AACvC,aAAOA,GAAG,CAACjB,IAAJ,EAAP;AACD,KAFe,CAAf;AAEE,GANP;AAOIqB,EAAAA,OAAO,CAACC,GAAR,CAAYX,YAAZ;AACJ,SAAOA,YAAP;AACD;AAED,OAAO,SAASY,SAAT,CAAmBC,MAAnB,EAA0B;AAC/B7B,EAAAA,QAAQ,CAACiB,SAAT,GACCC,UADD,CACY,SADZ,EACuBY,GADvB,CAC2B;AACzBC,IAAAA,QAAQ,EAACF,MAAM,CAACE,QADS;AAEzB7B,IAAAA,UAAU,EAAE2B,MAAM,CAAC3B,UAFM;AAGzB8B,IAAAA,KAAK,EAAEH,MAAM,CAACG,KAHW;AAIzBnB,IAAAA,SAAS,EAAEgB,MAAM,CAAChB,SAJO;AAKzBoB,IAAAA,WAAW,EAAEJ,MAAM,CAACI,WALK;AAMzBC,IAAAA,IAAI,EAAEL,MAAM,CAACK,IANY;AAOzBnC,IAAAA,WAAW,EAAE8B,MAAM,CAAC9B,WAAP,CAAmBK,GAAnB,CAAuB,UAAA+B,UAAU,EAAE;AAC9C,aAAO;AACL7B,QAAAA,EAAE,EAAE6B,UAAU,CAAC,CAAD,CADT;AAELC,QAAAA,MAAM,EAAED,UAAU,CAAC,CAAD;AAFb,OAAP;AAID,KALY,CAPY;AAazBE,IAAAA,WAAW,EAAER,MAAM,CAACQ;AAbK,GAD3B;AAgBD;AAED,OAAO,SAASC,aAAT,CAAuBzC,OAAvB,EAA+B;AACpCA,EAAAA,OAAO,CAACO,GAAR,CAAY,UAAAyB,MAAM,EAAE;AAClBD,IAAAA,SAAS,CAACC,MAAD,CAAT;AACD,GAFD;AAGD;AAED,OAAO,SAASU,WAAT,CAAqBpC,QAArB,EAA8B;AACnCH,EAAAA,QAAQ,CAACiB,SAAT,GACCC,UADD,CACY,YADZ,EAC0BY,GAD1B,CAC8B;AAC5BxB,IAAAA,EAAE,EAAEH,QAAQ,CAACG,EADe;AAE5BG,IAAAA,IAAI,EAAEN,QAAQ,CAACM,IAFa;AAG5BI,IAAAA,SAAS,EAACV,QAAQ,CAACU;AAHS,GAD9B;AAMD;AAED,OAAO,SAAS2B,aAAT,CAAuB1C,UAAvB,EAAkC;AACvCA,EAAAA,UAAU,CAACM,GAAX,CAAe,UAAAN,UAAU,EAAE;AACzByC,IAAAA,WAAW,CAACzC,UAAD,CAAX;AACD,GAFD;AAGD;AAED,OAAO,SAAS2C,aAAT,CAAuBN,UAAvB,EAAkC;AACvCnC,EAAAA,QAAQ,CAACiB,SAAT,GACCC,UADD,CACY,aADZ,EAC2BY,GAD3B,CAC+B;AAC7BpB,IAAAA,YAAY,EAAEyB,UAAU,CAACzB,YADI;AAE7BD,IAAAA,IAAI,EAAE0B,UAAU,CAAC1B,IAFY;AAG7BI,IAAAA,SAAS,EAACsB,UAAU,CAACtB;AAHQ,GAD/B;AAMD;AAED,OAAO,SAAS6B,cAAT,CAAwB3C,WAAxB,EAAoC;AACzCA,EAAAA,WAAW,CAACK,GAAZ,CAAgB,UAAA+B,UAAU,EAAE;AAC1BM,IAAAA,aAAa,CAACN,UAAD,CAAb;AACD,GAFD;AAGD;AAID,OAAO,SAASQ,sBAAT,CAAgCjC,YAAhC,EAA8C;AACnD,MAAMM,YAAY,GAAG,EAArB;AACAnB,EAAAA,OAAO,CAACO,GAAR,CAAY,UAAAC,IAAI,EAAI;AAClBA,IAAAA,IAAI,CAACN,WAAL,CAAiBK,GAAjB,CAAqB,UAAAwC,KAAK,EAAI;AAC5B,UAAIA,KAAK,CAAC,CAAD,CAAL,IAAYlC,YAAhB,EAA8B;AAC5BM,QAAAA,YAAY,CAAC6B,IAAb,CAAkBxC,IAAlB;AACD;AACF,KAJD;AAKD,GAND;AAOA,SAAOW,YAAP;AACD;AAED,OAAO,SAAS8B,kBAAT,CAA4B5C,UAA5B,EAAwC;AAC7C,MAAI6C,KAAK,GAAG,CAAZ;AACAlD,EAAAA,OAAO,CAACO,GAAR,CAAY,UAAAC,IAAI,EAAI;AAClB,QAAIA,IAAI,CAACH,UAAL,IAAmBA,UAAvB,EAAmC;AACjC6C,MAAAA,KAAK;AACN;AACF,GAJD;AAKA,SAAOA,KAAP;AACD;AAED,OAAO,SAASC,iBAAT,CAA2BC,OAA3B,EAAoC;AACzC,MAAMC,gBAAgB,GAAG,EAAzB;AACAD,EAAAA,OAAO,CAAC7C,GAAR,CAAY,UAAAwC,KAAK,EAAI;AACnB7C,IAAAA,WAAW,CAACK,GAAZ,CAAgB,UAAAC,IAAI,EAAI;AACtB,UAAIA,IAAI,CAACK,YAAL,IAAqBkC,KAAK,CAAC,CAAD,CAA9B,EAAmC;AACjCM,QAAAA,gBAAgB,CAACL,IAAjB,CAAsB,CAACxC,IAAD,EAAOuC,KAAK,CAAC,CAAD,CAAZ,CAAtB;AACD;AACF,KAJD;AAKD,GAND;AAOA,SAAOM,gBAAP;AACD;AAGD,OAAO,SAASC,0BAAT,CAAoCC,cAApC,EAAoD;AACzD,MAAMC,SAAS,GAAGD,cAAc,CAACE,WAAf,EAAlB;AACA,MAAMtC,YAAY,GAAG,EAArB;AACAjB,EAAAA,WAAW,CAACK,GAAZ,CAAgB,UAAAC,IAAI,EAAI;AACtB,QAAIA,IAAI,CAACI,IAAL,CAAU6C,WAAV,GAAwBC,QAAxB,CAAiCF,SAAjC,CAAJ,EAAiD;AAE/C,UAAMxD,QAAO,GAAG8C,sBAAsB,CAACtC,IAAI,CAACK,YAAN,CAAtC;;AACA,UAAM8C,MAAM,sBAAO,IAAIC,GAAJ,CAAQ5D,QAAR,CAAP,CAAZ;;AACA2D,MAAAA,MAAM,CAACpD,GAAP,CAAW,UAAAsD,IAAI,EAAI;AACjB1C,QAAAA,YAAY,CAAC6B,IAAb,CAAkBa,IAAlB;AACD,OAFD;AAGD;AACF,GATD;;AAUA,MAAMC,WAAW,sBAAO,IAAIF,GAAJ,CAAQzC,YAAR,CAAP,CAAjB;;AACA,SAAO2C,WAAP;AACD;AAED,OAAO,SAASC,wBAAT,CAAkCC,YAAlC,EAAgD;AACrD,MAAMR,SAAS,GAAGQ,YAAY,CAACP,WAAb,EAAlB;AACA,MAAMtC,YAAY,GAAG,EAArB;AACAlB,EAAAA,UAAU,CAACM,GAAX,CAAe,UAAAC,IAAI,EAAI;AACrB,QAAIA,IAAI,CAACI,IAAL,CAAU6C,WAAV,GAAwBC,QAAxB,CAAiCF,SAAjC,CAAJ,EAAiD;AAC/C,UAAMxD,SAAO,GAAGkB,UAAU,CAACV,IAAI,CAACC,EAAN,CAA1B;;AACAT,MAAAA,SAAO,CAACO,GAAR,CAAY,UAAAsD,IAAI,EAAI;AAClB1C,QAAAA,YAAY,CAAC6B,IAAb,CAAkBa,IAAlB;AACD,OAFD;AAGD;AACF,GAPD;AAQA,SAAO1C,YAAP;AACD;AAED,OAAO,SAAS8C,sBAAT,CAAgCC,UAAhC,EAA4C;AACjD,MAAMV,SAAS,GAAGU,UAAU,CAACT,WAAX,EAAlB;AACA,MAAMtC,YAAY,GAAG,EAArB;AACAnB,EAAAA,OAAO,CAACO,GAAR,CAAY,UAAAC,IAAI,EAAI;AAClB,QAAIA,IAAI,CAAC2B,KAAL,CAAWsB,WAAX,GAAyBC,QAAzB,CAAkCF,SAAlC,CAAJ,EAAkD;AAChDrC,MAAAA,YAAY,CAAC6B,IAAb,CAAkBxC,IAAlB;AACD;AACF,GAJD;AAKA,SAAOW,YAAP;AACD","sourcesContent":["import { Text } from 'react-native';\nimport React, { Component } from 'react';\nimport { recipes, categories, ingredients } from './dataArrays';\nimport Firebase from '../../firebaseConfig'\n\nexport function getCategoryById(categoryId) {\n  let category;\n  categories.map(data => {\n    if (data.id == categoryId) {\n      category = data;\n    }\n  });\n  return category;\n}\n\nexport function getIngredientName(ingredientID) {\n  let name;\n  ingredients.map(data => {\n    if (data.ingredientId == ingredientID) {\n      name = data.name;\n    }\n  });\n  return name;\n}\n\nexport function getIngredientUrl(ingredientID) {\n  let url;\n  ingredients.map(data => {\n    if (data.ingredientId == ingredientID) {\n      url = data.photo_url;\n    }\n  });\n  return url;\n}\n\nexport function getCategoryName(categoryId) {\n  let name;\n  categories.map(data => {\n    if (data.id == categoryId) {\n      name = data.name;\n    }\n  });\n  return name;\n}\n\nexport function getRecipes(categoryId) {\n  const recipesArray = [];\n  Firebase.firestore()\n    .collection(\"recipes\")\n    .onSnapShot((snapshot) => {\n      return recipesArray = snapshot.docs.map(doc => {\n        const data = doc.data();\n        if (data.categoryId == categoryId) {\n        return data\n        }\n      })})\n      /*\n  const recipesArray = [];\n  recipes.map(data => {\n    if (data.categoryId == categoryId) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n  */\n}\n\nexport function getAllRecipes(){\n  var recipesArray = [];\n  Firebase.firestore()\n    .collection(\"recipes\")\n    .get()\n    .then((snapshot) => {\n       recipesArray = snapshot.docs.map(doc => {\n        return doc.data();\n      })})\n      console.log(recipesArray)\n  return recipesArray;\n}\n\nexport function addRecipe(recipe){\n  Firebase.firestore()\n  .collection(\"recipes\").add({\n    recipeId:recipe.recipeId,\n    categoryId: recipe.categoryId,\n    title: recipe.title,\n    photo_url: recipe.photo_url,\n    photosArray: recipe.photosArray,\n    time: recipe.time,\n    ingredients: recipe.ingredients.map(ingredient=>{\n      return {\n        id: ingredient[0],\n        amount: ingredient[1]\n      }\n    }),\n    description: recipe.description\n  })\n}\n\nexport function addAllRecipes(recipes){\n  recipes.map(recipe=>{\n    addRecipe(recipe)\n  })\n}\n\nexport function addCategory(category){\n  Firebase.firestore()\n  .collection(\"categories\").add({\n    id: category.id,\n    name: category.name,\n    photo_url:category.photo_url\n  })\n}\n\nexport function addCategories(categories){\n  categories.map(categories=>{\n    addCategory(categories)\n  })\n}\n\nexport function addIngredient(ingredient){\n  Firebase.firestore()\n  .collection(\"ingredients\").add({\n    ingredientId: ingredient.ingredientId,\n    name: ingredient.name,\n    photo_url:ingredient.photo_url\n  })\n}\n\nexport function addIngredients(ingredients){\n  ingredients.map(ingredient=>{\n    addIngredient(ingredient)\n  })\n}\n\n\n// modifica\nexport function getRecipesByIngredient(ingredientId) {\n  const recipesArray = [];\n  recipes.map(data => {\n    data.ingredients.map(index => {\n      if (index[0] == ingredientId) {\n        recipesArray.push(data);\n      }\n    });\n  });\n  return recipesArray;\n}\n\nexport function getNumberOfRecipes(categoryId) {\n  let count = 0;\n  recipes.map(data => {\n    if (data.categoryId == categoryId) {\n      count++;\n    }\n  });\n  return count;\n}\n\nexport function getAllIngredients(idArray) {\n  const ingredientsArray = [];\n  idArray.map(index => {\n    ingredients.map(data => {\n      if (data.ingredientId == index[0]) {\n        ingredientsArray.push([data, index[1]]);\n      }\n    });\n  });\n  return ingredientsArray;\n}\n\n// functions for search\nexport function getRecipesByIngredientName(ingredientName) {\n  const nameUpper = ingredientName.toUpperCase();\n  const recipesArray = [];\n  ingredients.map(data => {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      // data.name.yoUpperCase() == nameUpper\n      const recipes = getRecipesByIngredient(data.ingredientId);\n      const unique = [...new Set(recipes)];\n      unique.map(item => {\n        recipesArray.push(item);\n      });\n    }\n  });\n  const uniqueArray = [...new Set(recipesArray)];\n  return uniqueArray;\n}\n\nexport function getRecipesByCategoryName(categoryName) {\n  const nameUpper = categoryName.toUpperCase();\n  const recipesArray = [];\n  categories.map(data => {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      const recipes = getRecipes(data.id); // return a vector of recipes\n      recipes.map(item => {\n        recipesArray.push(item);\n      });\n    }\n  });\n  return recipesArray;\n}\n\nexport function getRecipesByRecipeName(recipeName) {\n  const nameUpper = recipeName.toUpperCase();\n  const recipesArray = [];\n  recipes.map(data => {\n    if (data.title.toUpperCase().includes(nameUpper)) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}\n"]},"metadata":{},"sourceType":"module"}