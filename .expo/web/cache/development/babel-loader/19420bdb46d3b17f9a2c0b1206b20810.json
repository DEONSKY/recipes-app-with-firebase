{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\MERTCAN\\\\Desktop\\\\receipes-app\\\\recipes-app-react-native-master\\\\src\\\\screens\\\\Home\\\\HomeScreen.js\";\nimport React, { useLayoutEffect, useEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styles from \"./styles\";\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\nimport { getCategoryName, addAllRecipes, addCategories, addIngredients, getAllRecipes } from \"../../data/MockDataAPI\";\nexport default function HomeScreen(props) {\n  var _this = this;\n\n  var navigation = props.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      recipes = _useState2[0],\n      setRecipes = _useState2[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return React.createElement(MenuImage, {\n          onPress: function onPress() {\n            navigation.openDrawer();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 9\n          }\n        });\n      },\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 26\n          }\n        });\n      }\n    });\n  }, []);\n  useEffect(function () {\n    getAllRecipes().then(function (res) {\n      setRecipes(res);\n    });\n  }, []);\n\n  var onPressRecipe = function onPressRecipe(item) {\n    navigation.navigate(\"Recipe\", {\n      item: item\n    });\n  };\n\n  var renderRecipes = function renderRecipes(_ref) {\n    var item = _ref.item;\n    getCategoryName(item.categoryId).then(function (res) {\n      return React.createElement(TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,0.9)\",\n        onPress: function onPress() {\n          return onPressRecipe(item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.photo,\n        source: {\n          uri: item.photo_url\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: styles.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, item.title), React.createElement(Text, {\n        style: styles.category,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, res)));\n    });\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    vertical: true,\n    showsVerticalScrollIndicator: false,\n    numColumns: 2,\n    data: recipes,\n    renderItem: renderRecipes,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.recipeId;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/MERTCAN/Desktop/receipes-app/recipes-app-react-native-master/src/screens/Home/HomeScreen.js"],"names":["React","useLayoutEffect","useEffect","useState","styles","MenuImage","getCategoryName","addAllRecipes","addCategories","addIngredients","getAllRecipes","HomeScreen","props","navigation","recipes","setRecipes","setOptions","headerLeft","openDrawer","headerRight","then","res","onPressRecipe","item","navigate","renderRecipes","categoryId","container","photo","uri","photo_url","title","category","recipeId"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect,useEffect,useState } from \"react\";\nimport { FlatList, Text, View, TouchableHighlight, Image } from \"react-native\";\nimport styles from \"./styles\";\n//import { recipes,categories,ingredients } from \"../../data/dataArrays\";\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\nimport { getCategoryName,addAllRecipes,addCategories,addIngredients,getAllRecipes } from \"../../data/MockDataAPI\";\n\nexport default function HomeScreen(props) {\n  const { navigation } = props;\n  const [recipes,setRecipes] = useState([])\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerLeft: () => (\n        <MenuImage\n          onPress={() => {\n            navigation.openDrawer();\n          }}\n        />\n      ),\n      headerRight: () => <View />,\n    });\n  }, []);\n\n  useEffect(() => {\n    //addIngredients(ingredients)\n    getAllRecipes().then(\n      res=>{\n        setRecipes(res)\n      }\n    )\n    \n  }, [])\n\n  const onPressRecipe = (item) => {\n    navigation.navigate(\"Recipe\", { item });\n  };\n\n  const renderRecipes = ({ item }) => {\n    getCategoryName(item.categoryId).then(res => (\n      <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressRecipe(item)}>\n        <View style={styles.container}>\n          <Image style={styles.photo} source={{ uri: item.photo_url }} />\n          <Text style={styles.title}>{item.title}</Text>\n          <Text style={styles.category}>{res}</Text>\n        </View>\n      </TouchableHighlight>\n    ))\n  };\n\n  return (\n    <View>\n      <FlatList vertical showsVerticalScrollIndicator={false} numColumns={2} data={recipes} renderItem={renderRecipes} keyExtractor={(item) => `${item.recipeId}`} />\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}