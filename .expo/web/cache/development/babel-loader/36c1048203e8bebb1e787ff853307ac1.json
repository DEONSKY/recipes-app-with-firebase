{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\MERTCAN\\\\Desktop\\\\receipes-app\\\\recipes-app-react-native-master\\\\src\\\\screens\\\\Home\\\\HomeScreen.js\";\nimport React, { useLayoutEffect, useEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styles from \"./styles\";\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\nimport { getCategoryName, addAllRecipes, addCategories, addIngredients, getAllRecipes } from \"../../data/MockDataAPI\";\nexport default function HomeScreen(props) {\n  var _this = this;\n\n  var navigation = props.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      recipes = _useState2[0],\n      setRecipes = _useState2[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return React.createElement(MenuImage, {\n          onPress: function onPress() {\n            navigation.openDrawer();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 9\n          }\n        });\n      },\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 26\n          }\n        });\n      }\n    });\n  }, []);\n  useEffect(function () {\n    getAllRecipes().then(function (res) {\n      Promise.all(res.map(function (recipe) {\n        return new Promise(function (resolve, reject) {\n          getCategoryName(recipe.categoryId).then(function (res) {\n            return resolve(recipe.categoryName = res);\n          }).catch(reject());\n        });\n      })).then(setRecipes(res));\n    });\n  }, []);\n\n  var onPressRecipe = function onPressRecipe(item) {\n    navigation.navigate(\"Recipe\", {\n      item: item\n    });\n  };\n\n  var renderRecipes = function renderRecipes(_ref) {\n    var item = _ref.item;\n    return React.createElement(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressRecipe(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      style: styles.photo,\n      source: {\n        uri: item.photo_url\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, item.title), React.createElement(Text, {\n      style: styles.category,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, item.categoryName)));\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    vertical: true,\n    showsVerticalScrollIndicator: false,\n    numColumns: 2,\n    data: recipes,\n    renderItem: renderRecipes,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.recipeId;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/MERTCAN/Desktop/receipes-app/recipes-app-react-native-master/src/screens/Home/HomeScreen.js"],"names":["React","useLayoutEffect","useEffect","useState","styles","MenuImage","getCategoryName","addAllRecipes","addCategories","addIngredients","getAllRecipes","HomeScreen","props","navigation","recipes","setRecipes","setOptions","headerLeft","openDrawer","headerRight","then","res","Promise","all","map","recipe","resolve","reject","categoryId","categoryName","catch","onPressRecipe","item","navigate","renderRecipes","container","photo","uri","photo_url","title","category","recipeId"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect,useEffect,useState } from \"react\";\nimport { FlatList, Text, View, TouchableHighlight, Image } from \"react-native\";\nimport styles from \"./styles\";\n//import { recipes,categories,ingredients } from \"../../data/dataArrays\";\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\nimport { getCategoryName,addAllRecipes,addCategories,addIngredients,getAllRecipes } from \"../../data/MockDataAPI\";\n\nexport default function HomeScreen(props) {\n  const { navigation } = props;\n  const [recipes,setRecipes] = useState([])\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerLeft: () => (\n        <MenuImage\n          onPress={() => {\n            navigation.openDrawer();\n          }}\n        />\n      ),\n      headerRight: () => <View />,\n    });\n  }, []);\n\n  useEffect(() => {\n    //addIngredients(ingredients)\n    getAllRecipes().then(\n      res=>{\n        Promise.all(\n          res.map(recipe=>{\n          return new Promise((resolve, reject) => {\n            getCategoryName(recipe.categoryId).then(res=>resolve(recipe.categoryName=res)).catch(reject())\n          })\n        })).then(setRecipes(res))\n        \n      }\n    )\n    \n  }, [])\n\n  const onPressRecipe = (item) => {\n    navigation.navigate(\"Recipe\", { item });\n  };\n\n  const renderRecipes = ({ item }) => (\n    <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressRecipe(item)}>\n      <View style={styles.container}>\n        <Image style={styles.photo} source={{ uri: item.photo_url }} />\n        <Text style={styles.title}>{item.title}</Text>\n        <Text style={styles.category}>{item.categoryName}</Text>\n      </View>\n    </TouchableHighlight>\n  );\n\n  return (\n    <View>\n      <FlatList vertical showsVerticalScrollIndicator={false} numColumns={2} data={recipes} renderItem={renderRecipes} keyExtractor={(item) => `${item.recipeId}`} />\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}